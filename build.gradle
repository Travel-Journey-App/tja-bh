buildscript {
    repositories {
        mavenCentral()
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '2.2.0.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
}

group 'com.tja.bh'
version '1.0-SNAPSHOT'

sourceCompatibility = '11'

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencyLocking {
    lockAllConfigurations()
    lockMode = LockMode.STRICT
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.session:spring-session-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-mail:2.2.5.RELEASE'
    implementation 'javax.persistence:javax.persistence-api:2.2'
    implementation 'javax.validation:validation-api:2.0.1.Final'
    implementation 'org.jboss.aerogear:aerogear-otp-java:1.0.0'
    implementation 'com.maxmind.geoip2:geoip2:2.3.1'
    implementation 'redis.clients:jedis:3.2.0'
    implementation 'joda-time:joda-time:2.10.6'
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    implementation 'com.google.api-client:google-api-client:1.31.1'

    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'junit:junit:4.13'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'io.zonky.test:embedded-database-spring-test:1.5.5'
    testImplementation 'it.ozimov:embedded-redis:0.7.2'
}

test {
    useJUnitPlatform()

    testLogging.showStandardStreams = true

    afterSuite { desc, result ->
        if (!desc.parent) {
            def output = "Results: ${result.resultType} " +
                    "(${result.testCount} tests, " +
                    "${result.successfulTestCount} passed, " +
                    "${result.failedTestCount} failed, " +
                    "${result.skippedTestCount} skipped)"

            def startItem = '|  ', endItem = '  |'
            def repeatLength = startItem.length() + output.length() + endItem.length()
            println('\n' + ('-' * repeatLength) + '\n' + startItem + output + endItem + '\n' + ('-' * repeatLength))
        }
    }
}

task resolveAndLockAll {
    doFirst {
        assert gradle.startParameter.writeDependencyLocks
    }
    doLast {
        configurations.findAll {
            // Add any custom filtering on the configurations to be resolved
            it.canBeResolved
        }.each { it.resolve() }
    }
}